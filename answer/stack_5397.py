# Q.
# 창영이는 강산이의 비밀번호를 훔치기 위해서 강산이가 사용하는 컴퓨터에 키로거를 설치했다.
# 며칠을 기다린 끝에 창영이는 강산이가 비밀번호 창에 입력하는 글자를 얻어냈다.
#
# 키로거는 사용자가 키보드를 누른 명령을 모두 기록한다. 따라서, 강산이가 비밀번호를 입력할 때,
# 화살표나 백스페이스를 입력해도 정확한 비밀번호를 알아낼 수 있다.
#
# 강산이가 비밀번호 창에서 입력한 키가 주어졌을 때, 강산이의 비밀번호를 알아내는 프로그램을 작성하시오.
# 강산이는 키보드로 입력한 키는 알파벳 대문자, 소문자, 숫자, 백스페이스, 화살표이다.
#
# Input.
# 첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한줄로 이루어져 있고,
# 강산이가 입력한 순서대로 길이가 L인 문자열이 주어진다. (1 ≤ L ≤ 1,000,000)
# 강산이가 백스페이스를 입력했다면, '-'가 주어진다.
# 이때 커서의 바로 앞에 글자가 존재한다면, 그 글자를 지운다.
# 화살표의 입력은 '<'와 '>'로 주어진다.
# 이때는 커서의 위치를 움직일 수 있다면, 왼쪽 또는 오른쪽으로 1만큼 움직인다.
# 나머지 문자는 비밀번호의 일부이다. 물론, 나중에 백스페이스를 통해서 지울 수는 있다.
# 만약 커서의 위치가 줄의 마지막이 아니라면,
# 커서 및 커서 오른쪽에 있는 모든 문자는 오른쪽으로 한 칸 이동한다.
#
# Output.
# 각 테스트 케이스에 대해서, 강산이의 비밀번호를 출력한다. 비밀번호의 길이는 항상 0보다 크다.

# T = int(input())
# Pw = input()
# result = ''
# stack = []
#
# pointer = -1
# for _ in range(T) :
#     for i in range (len(Pw)) :
#         if pointer < -1 :
#             pointer = -1
#         if i == '<' :
#             pointer -= 1
#             if i+1 != '<' or i+1 != '>' or i+1 != '-' :
#                 stack[pointer+1]=i+1
#         elif i == '>' :
#             pointer += 1
#         elif i == '-' :
#             stack.pop()
#         else :
#             stack.append(i)
#             pointer += 1

# 스택을 두 개 만들어서 좌 우로 넘겨주는 아이디어... !

import sys
input = sys.stdin.readline
t = int(input())
for i in range(t) :
    tmp = input().rstrip() # 공백제거
    pwd = [] # 기본적으로 입력되는 문자를 담을 스택
    sub = [] # 커서를 옮기는 행동을 하게해주는 부 스택
    for c in tmp :
        if c == '<' : # 커서를 왼쪽으로 옮긴다면
            if pwd : # 현재 pwd에 입력된 문자가 있을때
                sub.append(pwd.pop()) # 입력되어 있는 문자를 부스택으로 옮김
        elif c == '>' : # 커서를 오른쪽으로 옮긴다면
            if sub :    # 현재 부스택에 저장된 문자가 있을때
                pwd.append(sub.pop()) # 부스택 문자를 pwd로 다시 가져옴
        elif c == '-' :
            if pwd :
                pwd.pop()
        else :
            pwd.append(c)
    print("".join(pwd),"".join(sub[::-1]),sep="")

# arr1 = ['a','b','c','d']
# str1 = ''.join(arr1) #리스트 원소들을 문자열로 만드는 조합으로 많이 씀
# print(str1) -> abcd
#
# sep="" : 출력할 값들 사이에 삽입할 문자를 지정함
# 얘는 지금 아무것도 없어서 문자들이 붙어서 출력됨
# sep의 default는 sep=" " 공백임
